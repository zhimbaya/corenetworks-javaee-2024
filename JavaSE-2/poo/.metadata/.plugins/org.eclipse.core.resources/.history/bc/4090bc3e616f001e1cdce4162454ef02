package service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import modelo.Cesta;
import modelo.Ciudad;

public class PedidoService {
	Cesta cesta = new Cesta();
	ArrayList<Cesta> cestaList = new ArrayList<>();

	
	public boolean alta(String producto, int precio, LocalDate fecha) {
			if(cestaList.stream().noneMatch(c->c.getProducto().equals(producto)
					&&c.getPrecio()==precio&&c.getFechaPedido().equals(fecha)));
		return true;
	}
	public Cesta recientes () {
		Cesta cesta=cestaList.get(0);
		LocalDate fechaReciente=cesta.getFechaPedido();
		for(Cesta c:cestaList) {
			if(c.getFechaPedido().isAfter(fechaReciente)) { //si encontramos una fecha m√°s reciente, actualizamos variables
				fechaReciente=c.getFechaPedido();
				cesta=c;
			}
		}
		return cesta;
	}
	
	public Map<Double,List<Cesta>> precioInferior (double p) {
			return cestaList.stream()
					.collect(Collectors.averagingDouble(c->c.getPrecio()<p));
					
					
					
				
					
	}
	
	public ArrayList<Cesta> anteriores (int meses) {
		ArrayList<Cesta> res=new ArrayList<Cesta>();
		LocalDate referencia=LocalDate.now().minusMonths(meses);
		for(Cesta c:cestaList) {
			if(c.getFechaPedido().isBefore(referencia)) {
				res.add(c);
			}
		}
		return res;
	}
	
	
}
